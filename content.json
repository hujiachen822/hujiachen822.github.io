{"meta":{"title":"Hujiachen's Blog","subtitle":null,"description":null,"author":"胡佳晨","url":"http://hujiachen822.github.io"},"pages":[],"posts":[{"title":"MPAndroid增加图例点击效果","slug":"legendClick","date":"2017-08-09T03:19:56.436Z","updated":"2017-08-09T03:19:56.513Z","comments":true,"path":"2017/08/09/legendClick/","link":"","permalink":"http://hujiachen822.github.io/2017/08/09/legendClick/","excerpt":"","text":"MPAndroid增加图例点击效果本例子是根据 MPAndroidChart:v2.2.5 版本添加 按照惯例线上图(堆叠图如何实现后面会写) 未点击图例: 点击图例: 提示：所有颜色部分可以用任意的色值不用在乎我的色值 上代码: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374//ArrayList&lt;String&gt; nameArray 用来存线名称(图例名称)//HashMap&lt;String, ArrayList&lt;Float&gt;&gt; lineY 用来存线Y轴数据的 &lt;String(线名称)//colorResource 字体颜色自己随意改//ArrayList&lt;HashMap&lt;String, Boolean&gt;&gt; isCheck 用来记录线的点击状态 是否被点击 private void setPicEx(final LineData mLineData, final LineChart mLineChart, final float addValue) &#123; // 用来存储每条线的最大值 final ArrayList&lt;Float&gt; maxYList = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; nameArray.size(); i++) &#123; maxYList.add(mLineData.getDataSetByIndex(i).getYMax()); &#125; if (null == mContext || &quot;null&quot;.equals(mContext)) &#123; &#125; else &#123; LayoutInflater layoutInflater = LayoutInflater.from(mContext.getApplicationContext()); final int count = lineY.size(); mView.removeAllViews(); for (int i = 0; i &lt; count; i++) &#123; View view = layoutInflater.inflate(R.layout.item_chart_ex, null, false); final LinearLayout ly = (LinearLayout) view.findViewById(R.id.picEx); final TextView txt = (TextView) view.findViewById(R.id.picName); txt.setTextColor(mContext.getResources().getColor(colorResource)); if (i &gt; colorArray.size()) &#123; ly.setBackgroundColor(Color.parseColor(colorArray.get(i / colorArray.size()))); &#125; else &#123; ly.setBackgroundColor(Color.parseColor(colorArray.get(i))); &#125; txt.setText(nameArray.get(i)); view.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; int index = 0; String name = txt.getText() + &quot;&quot;; // 获取第几个图例 for (int i = 0; i &lt; nameArray.size(); i++) &#123; if (name.equals(nameArray.get(i))) &#123; index = i; break; &#125; &#125; // 判断点击的是哪个图例 if (nameArray.get(index).equals(name)) &#123; if (isCheck.get(index).get(name)) &#123; ly.setBackgroundColor(Color.GRAY);// 设置灰色背景 mLineData.removeDataSet(index);//移除点击的图例数据 lineDataSets.add(index, new LineDataSet(null, name));// 添加一个null的数据弥补位置 isCheck.get(index).put(name, false);// 记录被点击状态 &#125; else &#123; if (index &gt; colorArray.size()) &#123;//行业均值点击 ly.setBackgroundColor(Color.parseColor(colorArray.get(index / colorArray.size())));// 设置背景颜色 &#125; else &#123; ly.setBackgroundColor(Color.parseColor(colorArray.get(index)));// 设置背景颜色 &#125; lineDataSets.remove(index);// 移除填充位置的数据 lineDataSets.add(index, lineDataSetsEmpty.get(index));//把数据填充到原来位置 isCheck.get(index).put(name, true);//取消记录的点击状态 &#125; &#125; mLineChart.notifyDataSetChanged(); mLineChart.invalidate();//更新UI if (useYMax.size() != 0) &#123; setMinValueClick(mLineChart); &#125; &#125; &#125;); mView.addView(view); if ((benchmarkName).equals(nameArray.get(i)) &amp;&amp; isVag) &#123; break; &#125; &#125; &#125; &#125; 这里是 R.layout.item_chart_ex 的 XML 123456789101112131415161718192021222324252627282930&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;40dp&quot; android:orientation=&quot;horizontal&quot;&gt; &lt;LinearLayout android:id=&quot;@+id/picEx&quot; android:layout_centerVertical=&quot;true&quot; android:layout_width=&quot;20dp&quot; android:layout_height=&quot;12dp&quot; android:layout_marginLeft=&quot;5dp&quot; android:orientation=&quot;horizontal&quot; android:background=&quot;#000000&quot;/&gt; &lt;TextView android:padding=&quot;5dp&quot; android:id=&quot;@+id/picName&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;match_parent&quot; android:layout_gravity=&quot;center_vertical&quot; android:gravity=&quot;center&quot; android:text=&quot;XXX&quot; android:textColor=&quot;@color/fontColor&quot; android:textSize=&quot;12dp&quot; android:layout_alignParentTop=&quot;true&quot; android:layout_toEndOf=&quot;@+id/picEx&quot; /&gt;&lt;/RelativeLayout&gt;","categories":[],"tags":[]},{"title":"SVG格式地图显示并获取点击位置","slug":"mapChart","date":"2017-08-08T07:56:43.313Z","updated":"2017-08-09T03:26:05.052Z","comments":true,"path":"2017/08/08/mapChart/","link":"","permalink":"http://hujiachen822.github.io/2017/08/08/mapChart/","excerpt":"","text":"SVG格式地图显示并获取点击位置是根据github上作品 IntroView 改进而来的。(作者对不起我忘记的你的地址了) SVG下载链接 废话不多说了，先上图 : 图1 点击的为地图左上角红色的色块 图2 点击的为地图上无色块的地方 下面上自定义控件代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357@SuppressWarnings(&#123;&quot;ForLoopReplaceableByForEach&quot;, &quot;UnusedDeclaration&quot;&#125;)public class IntroViewBrowser extends View &#123; private static final String LOG_TAG = &quot;IntroView&quot;; private final Paint mPaint = new Paint(Paint.ANTI_ALIAS_FLAG); private final Paint mPaint2 = new Paint(Paint.ANTI_ALIAS_FLAG); private final SvgHelper mSvg = new SvgHelper(mPaint); private int mSvgResource; private final Object mSvgLock = new Object(); private List&lt;SvgHelper.SvgPath&gt; mPaths = new ArrayList&lt;SvgHelper.SvgPath&gt;(0); private Thread mLoader; private SvgHelper.SvgPath mWaitPath; private SvgHelper.SvgPath mDragPath; private float mPhase; private float mWait; private float mDrag; private int mDuration; private float mFadeFactor; private int mRadius; private ObjectAnimator mSvgAnimator; private ObjectAnimator mWaitAnimator; private OnReadyListener mListener; public interface OnReadyListener &#123; void onReady(); &#125; private OnProvinceListener mProvince; public interface OnProvinceListener &#123; void onProvince(MapBean bean); &#125; private void invokeProvinceListener(MapBean bean) &#123; if (mProvince != null) mProvince.onProvince(bean); &#125; public void setOnProvinceListener(OnProvinceListener listener) &#123; mProvince = listener; &#125; public IntroViewBrowser(Context context, AttributeSet attrs) &#123; this(context, attrs, 0); &#125; public IntroViewBrowser(Context context, AttributeSet attrs, int defStyle) &#123; super(context, attrs, defStyle); TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.IntroView, defStyle, 0); try &#123; if (a != null) &#123; mPaint2.setStrokeWidth(a.getFloat(R.styleable.IntroView_strokeWidth, 10.0f)); mPaint.setColor(a.getColor(R.styleable.IntroView_strokeColor, 0xff000000)); mPhase = a.getFloat(R.styleable.IntroView_phase, 1.0f); mDuration = a.getInt(R.styleable.IntroView_duration, 4000); mFadeFactor = a.getFloat(R.styleable.IntroView_fadeFactor, 10.0f); mRadius = a.getDimensionPixelSize(R.styleable.IntroView_waitRadius, 50); &#125; &#125; finally &#123; if (a != null) a.recycle(); &#125; init(); &#125; private void init() &#123; mPaint.setStyle(Paint.Style.FILL); mPaint2.setStyle(Paint.Style.STROKE); mPaint2.setColor(0xff999999); createWaitPath(); setLayerType(LAYER_TYPE_SOFTWARE, null); mSvgAnimator = ObjectAnimator.ofFloat(this, &quot;phase&quot;, 0.0f, 1.0f).setDuration(mDuration); mWaitAnimator = ObjectAnimator.ofFloat(this, &quot;wait&quot;, 1.0f, 0.0f).setDuration(mDuration); mWaitAnimator.setRepeatMode(ObjectAnimator.RESTART); mWaitAnimator.setRepeatCount(ObjectAnimator.INFINITE); mWaitAnimator.setInterpolator(new LinearInterpolator()); mWaitAnimator.start(); &#125; private void createWaitPath() &#123; Paint paint = new Paint(mPaint); paint.setStrokeWidth(paint.getStrokeWidth() * 4.0f); Path p = new Path(); p.moveTo(0.0f, 0.0f); p.lineTo(mRadius * 6.0f, 0.0f); mWaitPath = new SvgHelper.SvgPath(p, paint); paint = new Paint(mWaitPath.paint); mDragPath = new SvgHelper.SvgPath(makeDragPath(mRadius), paint); &#125; public void setSvgResource(int resource) &#123; if (mSvgResource == 0) &#123; mSvgResource = resource; &#125; &#125; @Override protected void onDraw(Canvas canvas) &#123; super.onDraw(canvas); synchronized (mSvgLock) &#123; canvas.save(); final int count = mPaths.size(); for (int i = 0; i &lt; count; i++) &#123; SvgHelper.SvgPath svgPath = mPaths.get(i); int alpha = (int) (Math.min(mPhase * mFadeFactor, 1.0f) * 255.0f); svgPath.paint.setAlpha(alpha); setDataColor(i, svgPath.paint); canvas.drawPath(svgPath.path, mPaint2); canvas.drawPath(svgPath.path, svgPath.paint); &#125; canvas.restore(); &#125; canvas.save(); canvas.translate(0.0f, getHeight() - getPaddingBottom() - mRadius * 3.0f); if (mWaitPath.paint.getAlpha() &gt; 0) &#123; canvas.translate(getWidth() / 2.0f - mRadius * 3.0f, mRadius); canvas.drawPath(mWaitPath.path, mWaitPath.paint); &#125; else &#123; canvas.translate((getWidth() - mDragPath.bounds.width()) / 2.0f, 0.0f); canvas.drawPath(mDragPath.path, mDragPath.paint); &#125; canvas.restore(); &#125; // 实体类 private List&lt;MapBean&gt; mPositon = new ArrayList&lt;&gt;(); private List&lt;LabelBean&gt; mLabelBean; private int treeId = 1; private boolean isBrowser = false; Region re = new Region(); //用来接收数据 public void setSvgPosition(List&lt;MapBean&gt; positon) &#123; mPositon = positon; &#125; //用来接收Label Label为上面的图例 public void setSvgLableBean(List&lt;LabelBean&gt; mLabelBean) &#123; this.mLabelBean = mLabelBean; &#125; //用来接收Browser TreeId public void setBrowserTreeId(int treeId) &#123; this.treeId = treeId; &#125; //用来接收 是否Browser标识 public void setIsBrowser(boolean isBrowser) &#123; this.isBrowser = isBrowser; &#125; //判断哪个path更改颜色 public void setDataColor(int forPositon, Paint mPaint) &#123; mPaint.setColor(0xffDDDDDD); if (isBrowser) &#123; for (int i = 0; i &lt; mPositon.size(); i++) &#123; MapBean bean = mPositon.get(i); if (MapUtils.getLocalPosition(bean.getName()) == forPositon) &#123; // MapUtils.getValueColor(Double.parseDouble(bean.getY()), mLabelBean) 根据值在图例的区间内来上色 mPaint.setColor(MapUtils.getValueColor(Double.parseDouble(bean.getY()), mLabelBean)); break; &#125; else &#123; &#125; &#125; &#125; else &#123; for (int i = 0; i &lt; mPositon.size(); i++) &#123; MapBean bean = mPositon.get(i); // (MapUtils.getLocalPosition(bean.getY()) 根据地名来获得对应SVG模块的位置 if (MapUtils.getLocalPosition(bean.getY()) == forPositon) &#123; // MapUtils.getStateColor(bean.getState()) 根据标识来上色 mPaint.setColor(MapUtils.getStateColor(bean.getState())); break; &#125; else &#123; &#125; &#125; &#125; &#125; @Override public boolean onTouchEvent(MotionEvent event) &#123; //------关键部分 判断点是否在 一个闭合的path内--------// if (event.getAction() == MotionEvent.ACTION_DOWN) &#123; MapBean a = new MapBean(); RectF mComputeRect = new RectF(); for (int i = 0; i &lt; mPaths.size(); i++) &#123; mPaths.get(i).path.computeBounds(mComputeRect, true); Region region = new Region(); region.setPath(mPaths.get(i).path, new Region((int) mComputeRect.left, (int) mComputeRect.top, (int) mComputeRect.right, (int) mComputeRect.bottom)); // #号来标识的地方是我自己用来存储点击位置显示内容 # if (region.contains((int) event.getX(), (int) event.getY())) &#123; String name = MapUtils.getMapName(i); String value = &quot;暂无数据&quot;; for (int x = 0; x &lt; mPositon.size(); x++) &#123; if (mPositon.get(x).getName().contains(name)) &#123; value = mPositon.get(x).getY(); &#125; &#125; a.setX(value); a.setY(name);# invokeProvinceListener(a); break; &#125; &#125; &#125; return true; &#125; @Override protected void onSizeChanged(final int w, final int h, int oldw, int oldh) &#123; super.onSizeChanged(w, h, oldw, oldh); if (mLoader != null) &#123; try &#123; mLoader.join(); &#125; catch (InterruptedException e) &#123; Log.e(LOG_TAG, &quot;Unexpected error&quot;, e); &#125; &#125; mLoader = new Thread(new Runnable() &#123; @Override public void run() &#123; mSvg.load(getContext(), mSvgResource); synchronized (mSvgLock) &#123; mPaths = mSvg.getPathsForViewport( w - getPaddingLeft() - getPaddingRight(), h - getPaddingTop() - getPaddingBottom()); updatePathsPhaseLocked(); &#125; post(new Runnable() &#123; @Override public void run() &#123; invokeReadyListener(); if (mSvgAnimator.isRunning()) mSvgAnimator.cancel(); mSvgAnimator.start(); &#125; &#125;); &#125; &#125;, &quot;SVG Loader&quot;); mLoader.start(); &#125; private void invokeReadyListener() &#123; if (mListener != null) mListener.onReady(); &#125; public void setOnReadyListener(OnReadyListener listener) &#123; mListener = listener; &#125; private void updatePathsPhaseLocked() &#123; final int count = mPaths.size(); for (int i = 0; i &lt; count; i++) &#123; SvgHelper.SvgPath svgPath = mPaths.get(i); svgPath.renderPath.reset(); svgPath.measure.getSegment(0.0f, svgPath.length * mPhase, svgPath.renderPath, true); // Required only for Android 4.4 and earlier svgPath.renderPath.rLineTo(0.0f, 0.0f); &#125; &#125; public float getPhase() &#123; return mPhase; &#125; public void setPhase(float phase) &#123; mPhase = phase; synchronized (mSvgLock) &#123; updatePathsPhaseLocked(); &#125; invalidate(); &#125; public float getWait() &#123; return mWait; &#125; public void setWait(float wait) &#123; mWait = wait; invalidate(); &#125; public float getDrag() &#123; return mDrag; &#125; public void setDrag(float drag) &#123; mDrag = drag; int alpha = (int) (Math.min((1.0f - mDrag) * mFadeFactor, 1.0f) * 255.0f); mDragPath.paint.setAlpha(alpha); invalidate(); &#125; private static PathEffect createPathEffect(float pathLength, float phase, float offset) &#123; return new DashPathEffect(new float[]&#123;pathLength, pathLength&#125;, Math.max(phase * pathLength, offset)); &#125; private static Path makeDragPath(int radius) &#123; Path p = new Path(); RectF oval = new RectF(0.0f, 0.0f, radius * 2.0f, radius * 2.0f); float cx = oval.centerX(); float cy = oval.centerY(); float rx = oval.width() / 2.0f; float ry = oval.height() / 2.0f; final float TAN_PI_OVER_8 = 0.414213562f; final float ROOT_2_OVER_2 = 0.707106781f; float sx = rx * TAN_PI_OVER_8; float sy = ry * TAN_PI_OVER_8; float mx = rx * ROOT_2_OVER_2; float my = ry * ROOT_2_OVER_2; float L = oval.left; float T = oval.top; float R = oval.right; float B = oval.bottom; p.moveTo(R, cy); p.quadTo(R, cy + sy, cx + mx, cy + my); p.quadTo(cx + sx, B, cx, B); p.quadTo(cx - sx, B, cx - mx, cy + my); p.quadTo(L, cy + sy, L, cy); p.quadTo(L, cy - sy, cx - mx, cy - my); p.quadTo(cx - sx, T, cx, T); p.lineTo(cx, T - oval.height() * 1.3f); return p; &#125;&#125; 工具类代码如下 根据状态判断颜色123456789101112131415161718192021public static int getStateColor(String state) &#123; int color = 0; switch (state) &#123; case &quot;0&quot;: color = 0xff5bc750; break; case &quot;1&quot;: color = 0xffa7d25b; break; case &quot;2&quot;: color = 0xfff7de4d; break; case &quot;3&quot;: color = 0xfffd9141; break; case &quot;4&quot;: color = 0xfff4534e; break; &#125; return color; &#125; 根据省份名称，来判断是第几个path改变颜色12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273public static int getLocalPosition(String name) &#123; int i = -1; if (name.contains(&quot;安徽&quot;)) &#123; i = 0; &#125; else if (name.contains(&quot;北京&quot;)) &#123; i = 1; &#125; else if (name.contains(&quot;重庆&quot;)) &#123; i = 2; &#125; else if (name.contains(&quot;福建&quot;)) &#123; i = 3; &#125; else if (name.contains(&quot;广东&quot;)) &#123; i = 4; &#125; else if (name.contains(&quot;甘肃&quot;)) &#123; i = 5; &#125; else if (name.contains(&quot;广西&quot;)) &#123; i = 6; &#125; else if (name.contains(&quot;贵州&quot;)) &#123; i = 7; &#125; else if (name.contains(&quot;海南&quot;)) &#123; i = 8; &#125; else if (name.contains(&quot;河北&quot;)) &#123; i = 9; &#125; else if (name.contains(&quot;河南&quot;)) &#123; i = 10; &#125; else if (name.contains(&quot;香港&quot;)) &#123; i = 11; &#125; else if (name.contains(&quot;黑龙江&quot;)) &#123; i = 12; &#125; else if (name.contains(&quot;湖南&quot;)) &#123; i = 13; &#125; else if (name.contains(&quot;湖北&quot;)) &#123; i = 14; &#125; else if (name.contains(&quot;吉林&quot;)) &#123; i = 15; &#125; else if (name.contains(&quot;江苏&quot;)) &#123; i = 16; &#125; else if (name.contains(&quot;江西&quot;)) &#123; i = 17; &#125; else if (name.contains(&quot;辽宁&quot;)) &#123; i = 18; &#125; else if (name.contains(&quot;澳门&quot;)) &#123; i = 19; &#125; else if (name.contains(&quot;内蒙古&quot;)) &#123; i = 20; &#125; else if (name.contains(&quot;宁夏&quot;)) &#123; i = 21; &#125; else if (name.contains(&quot;青海&quot;)) &#123; i = 22; &#125; else if (name.contains(&quot;陕西&quot;)) &#123; i = 23; &#125; else if (name.contains(&quot;四川&quot;)) &#123; i = 24; &#125; else if (name.contains(&quot;山东&quot;)) &#123; i = 25; &#125; else if (name.contains(&quot;上海&quot;)) &#123; i = 26; &#125; else if (name.contains(&quot;山西&quot;)) &#123; i = 27; &#125; else if (name.contains(&quot;天津&quot;)) &#123; i = 28; &#125; else if (name.contains(&quot;台湾&quot;)) &#123; i = 29; &#125; else if (name.contains(&quot;新疆&quot;)) &#123; i = 30; &#125; else if (name.contains(&quot;西藏&quot;)) &#123; i = 31; &#125; else if (name.contains(&quot;云南&quot;)) &#123; i = 32; &#125; else if (name.contains(&quot;浙江&quot;)) &#123; i = 33; &#125; return i; &#125; 根据SVG点击位置，获取省份名称123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475 public static String getMapName(int position) &#123; String name = &quot;省份&quot;; if (0 == position) &#123; name = &quot;安徽&quot;; &#125; else if (1 == position) &#123; name = &quot;北京&quot;; &#125; else if (2 == position) &#123; name = &quot;重庆&quot;; &#125; else if (3 == position) &#123; name = &quot;福建&quot;; &#125; else if (4 == position) &#123; name = &quot;广东&quot;; &#125; else if (5 == position) &#123; name = &quot;甘肃&quot;; &#125; else if (6 == position) &#123; name = &quot;广西&quot;; &#125; else if (7 == position) &#123; name = &quot;贵州&quot;; &#125; else if (8 == position) &#123; name = &quot;海南&quot;; &#125; else if (9 == position) &#123; name = &quot;河北&quot;; &#125; else if (10 == position) &#123; name = &quot;河南&quot;; &#125; else if (11 == position) &#123; name = &quot;香港&quot;; &#125; else if (12 == position) &#123; name = &quot;黑龙江&quot;; &#125; else if (13 == position) &#123; name = &quot;湖南&quot;; &#125; else if (14 == position) &#123; name = &quot;湖北&quot;; &#125; else if (15 == position) &#123; name = &quot;吉林&quot;; &#125; else if (16 == position) &#123; name = &quot;江苏&quot;; &#125; else if (17 == position) &#123; name = &quot;江西&quot;; &#125; else if (18 == position) &#123; name = &quot;辽宁&quot;; &#125; else if (19 == position) &#123; name = &quot;澳门&quot;; &#125; else if (20 == position) &#123; name = &quot;内蒙古&quot;; &#125; else if (21 == position) &#123; name = &quot;宁夏&quot;; &#125; else if (22 == position) &#123; name = &quot;青海&quot;; &#125; else if (23 == position) &#123; name = &quot;陕西&quot;; &#125; else if (24 == position) &#123; name = &quot;四川&quot;; &#125; else if (25 == position) &#123; name = &quot;山东&quot;; &#125; else if (26 == position) &#123; name = &quot;上海&quot;; &#125; else if (27 == position) &#123; name = &quot;山西&quot;; &#125; else if (28 == position) &#123; name = &quot;天津&quot;; &#125; else if (29 == position) &#123; name = &quot;台湾&quot;; &#125; else if (30 == position) &#123; name = &quot;新疆&quot;; &#125; else if (31 == position) &#123; name = &quot;西藏&quot;; &#125; else if (32 == position) &#123; name = &quot;云南&quot;; &#125; else if (33 == position) &#123; name = &quot;浙江&quot;; &#125; return name; &#125;```","categories":[],"tags":[]}]}